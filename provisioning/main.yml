---
- hosts: all
  gather_facts: yes
  become: yes

  vars_files:
    - vars.yml

  tasks:
    - name: Upgrade all packages to the latest version
      apt: update_cache=yes upgrade=dist
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: 
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - python3-setuptools
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
    - name: Adding apt repository for Docker
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker.list
    - name: Update Apt Cache
      apt:
        update_cache: yes
    # Install apt packages
    - name: Install apt packages
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        - ansible
        - postgresql 
        - postgresql-client
        - postgresql-contrib
        - mysql-server
        - libmysqlclient-dev
        - libsqlite3-dev
        - git 
        - tree 
        - libreadline6-dev 
        - libreadline6
        - libssl-dev 
        - openssl 
        - zlibc 
        - build-essential 
        - ruby 
        - ruby-dev 
        - libxml2-dev
        - libxslt1-dev 
        - libpq-dev 
        - libmysqlclient-dev 
        - zlib1g-dev
        - tmux 
        - vim 
        - htop 
        - libyaml-dev 
        - sqlite3 
        - apt-transport-https 
        - kubectl 
        - unzip
        - nano
        - python3 
        - awscli 
        - rsync 
        - cron
        - docker-ce
    - name: Adding user to group docker to manage docker as non-root user
      user: 
       name={{ usernameÂ }}
       groups=docker
       append=yes

  handlers:
    - name: Start services
      apt: "name={{ item }} state=started"
      loop:
        - mysql-server
        - postgresql
        - docker